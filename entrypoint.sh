#!/bin/sh

# Fail on any error
set -e

# Set default environment if not provided
ENVIRONMENT=${ENVIRONMENT}

# Determine which environment file to load
case "$ENVIRONMENT" in
  prod)
    ENV_FILE=".env.prod"
    VERSION_PATH="migrations/prod_versions"
    ;;
  test)
    ENV_FILE=".env.test"
    VERSION_PATH="migrations/test_versions"
    ;;
  dev)
    ENV_FILE=".env.dev"
    VERSION_PATH="migrations/dev_versions"
    ;;
  *)
    echo "Unknown environment: $ENVIRONMENT"
    exit 1
    ;;
esac

# Load environment variables from the selected .env file
echo "Using environment file: $ENV_FILE"
export $(grep -v '^#' $ENV_FILE | xargs)

# Set the maximum wait time and interval
WAIT_TIMEOUT=90   # Timeout in seconds
CHECK_INTERVAL=1  # Check every 1 second
PRINT_INTERVAL=5  # Print every 5 seconds
elapsed_time=0
print_time=0

# Check if PostgreSQL is up and running before starting
echo "Waiting for PostgreSQL to be ready (timeout: $WAIT_TIMEOUT seconds)..."
until nc -z $DB_HOST 5432; do
  if [ $elapsed_time -ge $WAIT_TIMEOUT ]; then
    echo "Timeout: PostgreSQL did not become available in $WAIT_TIMEOUT seconds."
    exit 1
  fi
  if [ $print_time -ge $PRINT_INTERVAL ]; then
    echo "Still waiting for PostgreSQL..."
    print_time=0
  fi
  sleep $CHECK_INTERVAL
  elapsed_time=$((elapsed_time + CHECK_INTERVAL))
  print_time=$((print_time + CHECK_INTERVAL))
done

echo "PostgreSQL is up - proceeding with migrations..."

# Generate migration file
echo "Running alembic migrations for environment '$ENVIRONMENT' using version path '$VERSION_PATH'."
# migration_file=$(alembic revision --autogenerate -m "Auto-Generated by Docker entrypoint.sh" --version-path "$VERSION_PATH" | grep -oP '(?<=Generated new revision: )[a-f0-9]+')
# alembic revision --autogenerate -m "Auto-Generated by Docker entrypoint.sh" --version-path "$VERSION_PATH"

# Apply any pending migrations to the database
echo "Applying database migrations..."
alembic upgrade head


# Run the FastAPI application using Uvicorn
echo "Starting FastAPI with Uvicorn..."
exec uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
